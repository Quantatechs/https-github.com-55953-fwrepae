<?php
/**
 * NotificationTypeEnum
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Inter TT API
 *
 * The Inter TT REST API is described using OpenAPI 3.0. The descriptor for the api can be downloaded in both [YAML](http://localhost:8080/cyclos/api/openapi.yaml) or [JSON](http://localhost:8080/cyclos/api/openapi.json) formats. These files can be used in tools that support the OpenAPI specification, such as the [OpenAPI Generator](https://openapi-generator.tech).  In the API, whenever some data is referenced, for example, a group, or payment type, either id or internal name can be used. When an user is to be referenced, the special word 'self' (sans quotes) always refers to the currently authenticated user, and any identification method (login name, e-mail, mobile phone, account number or custom field) that can be used on keywords search (as configured in the products) can also be used to identify users. Some specific data types have other identification fields, like accounts can have a number and payments can have a transaction number. This all depends on the current configuration.  -----------  Most of the operations that return data allow selecting which fields to include in the response. This is useful to avoid calculating data that finally won't be needed and also for reducing the transfer over the network. If nothing is set, all object fields are returned. Fields are handled in 3 modes. Given an example object `{\"a\": {\"x\": 1, \"y\": 2, \"z\": 3}, \"b\": 0}`, the modes are: - **Include**: the field is unprefixed or prefixed with `+`. All fields which   are not explicitly included are excluded from the result. Examples:   - `[\"a\"]` results in `{\"a\": {\"x\": 1, \"y\": 2, \"z\": 3}}`   - `[\"+b\"]` results in `{\"b\": 0}`   - `[\"a.x\"]` results in `{\"a\": {\"x\": 1}}`. This is a nested include. At root     level, includes only `a` then, on `a`'s level, includes only `x`.  - **Exclude**: the field is prefixed by `-` (or, for compatibility purposes,   `!`). Only explicitly excluded fields   are excluded from the result. Examples:   - `[\"-a\"]` results in `{\"b\": 0}`   - `[\"-b\"]` results in `{\"a\": {\"x\": 1, \"y\": 2, \"z\": 3}}`   - `[\"a.-x\"]` results in `{\"a\": {\"y\": 2, \"z\": 3}}`. In this example, `a` is     actually an include at the root level, hence, excludes `b`.  - **Nested only**: when a field is prefixed by `*` and has a nested path,   it only affects includes / excludes for the nested fields, without affecting   the current level. Only nested fields are configured.   Examples:   - `[\"*a.x\"]` results in `{\"a\": {\"x\": 1}, \"b\": 0}`. In this example, `a` is     configured to include only `x`. `b` is also included because, there is no     explicit includes at root level.   - `[\"*a.-x\"]` results in `{\"a\": {\"y\": 2, \"z\": 3}, \"b\": 0}`. In this example,     `a` is configured to exclude only `x`. `b` is also included because there     is no explicit includes at the root level.     For backwards compatibility, this can also be expressed in a special     syntax `-a.x`. Also, keep in mind that `-x.y.z` is equivalent to `*x.*y.-z`.  You cannot have the same field included and excluded at the same time - a HTTP `422` status will be returned. Also, when mixing nested excludes with explicit includes or excludes, the nested exclude will be ignored. For example, using `[\"*a.x\", \"a.y\"]` will ignore the `*a.x` definition, resulting in `{\"a\": {\"y\": 2}}`.  -----------  For details of the deprecated elements (operations and model) please visit the [deprecation notes page](https://documentation.cyclos.org/4.16.3/api-deprecation.html) for this version.
 *
 * The version of the OpenAPI document: 4.16.3
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * NotificationTypeEnum Class Doc Comment
 *
 * @category Class
 * @description The different notification types generated for for users / administrators. Possible values are: - &#x60;adAuthorized&#x60;: A notification generated if a notification created when an advertisement is authorized. - &#x60;adExpired&#x60;: A notification generated if a notification created when an advertisement expires. - &#x60;adInterestNotification&#x60;: A notification generated if a notification created by a new advertisement (Simple or Webshop). - &#x60;adPendingAuthorization&#x60;: A notification generated if an ad is pending by broker authorization. - &#x60;adPendingByAdminAuthorization&#x60;: An admin notification generated if an advertisement is pending for authorization. - &#x60;adQuestionAnswered&#x60;: A notification generated if a question answered to some AD (Simple or Webshop). - &#x60;adQuestionCreated&#x60;: A notification generated if a question created to some AD (Simple or Webshop). - &#x60;adRejected&#x60;: A notification generated if a notification created when an advertisement authorization is rejected. - &#x60;allNonSmsPerformedPayments&#x60;: A notification generated if a user performed a new payment through a channel that is not the SMS channel. - &#x60;applicationError&#x60;: An admin notification generated if an application error has occurred. - &#x60;articleOutOfStock&#x60;: A notification generated if a webshop product is out of stock. - &#x60;authorizedPaymentCanceled&#x60;: A notification generated if the authorization of a payment was canceled. This notification is to be sent to the payer. - &#x60;authorizedPaymentDenied&#x60;: A notification generated if the authorization of a payment was denied. This notification is to be sent to the payer. - &#x60;authorizedPaymentExpired&#x60;: A notification generated if the authorization of a payment has expired. This notification is to be sent to the payer. - &#x60;authorizedPaymentSucceeded&#x60;: A notification generated if the authorization of a payment succeeded (the payment went successfully through its final authorization and is now processed). This notification is to be sent to the payer. - &#x60;boughtVouchersAboutToExpire&#x60;: Deprecated: Voucher notifications are no longer only for bought.. A notification generated if a one or more bought vouchers are about to expire. - &#x60;boughtVouchersExpirationDateChanged&#x60;: Deprecated: Voucher notifications are no longer only for bought.. A notification generated if a bought voucher has new expiration date. - &#x60;boughtVouchersExpired&#x60;: Deprecated: Voucher notifications are no longer only for bought.. A notification generated if one or more bought vouchers have expired. - &#x60;brokerAssigned&#x60;: A notification generated if a broker has been assigned to a user. - &#x60;brokerUnassigned&#x60;: A notification generated if a broker has been unassigned from a user. - &#x60;externalPaymentExpired&#x60;: A notification generated if the external payment has reached the expiration date. - &#x60;externalPaymentPerformedFailed&#x60;: A notification generated if the performed external payment has failed processing. - &#x60;externalPaymentReceivedFailed&#x60;: A notification generated if the received external payment has failed processing. - &#x60;externalUserPaymentExpired&#x60;: An admin notification generated if an external payment has expired. - &#x60;externalUserPaymentPerformedFailed&#x60;: An admin notification generated if an external payment failed processing. - &#x60;feedbackChanged&#x60;: A notification generated if a transaction feedback was modified. - &#x60;feedbackCreated&#x60;: A notification generated if a transaction feedback was created. - &#x60;feedbackExpirationReminder&#x60;: A notification generated if a transaction feedback is about to expire. - &#x60;feedbackOptional&#x60;: A notification generated if a performed payment can have an optional feedback. - &#x60;feedbackReplyCreated&#x60;: A notification generated if a transaction feedback was replied. - &#x60;feedbackRequired&#x60;: A notification generated if a performed payment needs to be given a feedback. - &#x60;generatedVouchersAboutToExpire&#x60;: An admin notification generated if a voucher will expire in a few days. - &#x60;generatedVouchersExpired&#x60;: An admin notification generated if a voucher has expired. - &#x60;incomingRecurringPaymentCanceled&#x60;: A notification generated if a recurring payment to a user has been canceled (only if the recurring payment is shown to receiver). - &#x60;incomingRecurringPaymentFailed&#x60;: A notification generated if a recurring payment to a user has failed (only if the recurring payment is shown to receiver). - &#x60;incomingRecurringPaymentReceived&#x60;: A notification generated if a recurring payment to a user was received (only if the recurring payment is shown to receiver). - &#x60;incomingScheduledPaymentCanceled&#x60;: A notification generated if a scheduled payment to a user has been canceled (only if the scheduled payment is shown to receiver). - &#x60;incomingScheduledPaymentFailed&#x60;: A notification generated if a scheduled payment to a user has failed (only if the scheduled payment is shown to receiver). - &#x60;incomingScheduledPaymentReceived&#x60;: A notification generated if a scheduled payment to a user was received (only if the scheduled payment is shown to receiver). - &#x60;limitChange&#x60;: A notification generated if a limit (lower/upper) has changed on an account. - &#x60;lowStockQuantity&#x60;: A notification generated if a product with stock quantity under limit. - &#x60;maxSmsPerMonthReached&#x60;: A notification generated if the maximum number of SMS messages per month has been reached. - &#x60;memberAssigned&#x60;: A notification generated if an user has been assigned to a broker. - &#x60;memberUnassigned&#x60;: A notification generated if an user has been unassigned from a broker. - &#x60;networkCreated&#x60;: An admin notification generated if a network is created. - &#x60;newToken&#x60;: A notification generated if a token / card has been created. - &#x60;newTokenPendingActivation&#x60;: A notification generated if a token / card has been created, but needs to be activated before being used. - &#x60;operatorAuthorizedPaymentApprovedStillPending&#x60;: A notification generated if a payment performed by an operator with authorization type &#x60;operator&#x60; was approved, but there is at least one authorization level. - &#x60;operatorAuthorizedPaymentCanceled&#x60;: A notification generated if a payment performed by an operator with authorization type &#x60;operator&#x60; was canceled. - &#x60;operatorAuthorizedPaymentDenied&#x60;: A notification generated if a payment performed by an operator with authorization type &#x60;operator&#x60; was denied. - &#x60;operatorAuthorizedPaymentExpired&#x60;: A notification generated if a payment performed by an operator with authorization type &#x60;operator&#x60; has expired. - &#x60;operatorAuthorizedPaymentSucceeded&#x60;: A notification generated if a payment performed by an operator with authorization type &#x60;operator&#x60; was approved and there was no further authorization. - &#x60;operatorPaymentAwaitingAuthorization&#x60;: A notification generated if a payment performed by an operator with authorization type &#x60;operator&#x60; is pending by authorization. - &#x60;orderCanceledBuyer&#x60;: A notification generated if a pending order has been canceled. - &#x60;orderCanceledSeller&#x60;: A notification generated if a pending order has been canceled. - &#x60;orderCreated&#x60;: A notification generated if a new web shop order created from a shopping cart checkout. - &#x60;orderPaymentCanceledBuyer&#x60;: A notification generated if an order payment was canceled by authorizer. - &#x60;orderPaymentCanceledSeller&#x60;: A notification generated if an order payment was canceled by authorizer. - &#x60;orderPaymentDeniedBuyer&#x60;: A notification generated if an order payment was denied by authorizer. - &#x60;orderPaymentDeniedSeller&#x60;: A notification generated if an order payment was denied by authorizer. - &#x60;orderPaymentExpiredBuyer&#x60;: A notification generated if an order payment has automatically expired. - &#x60;orderPaymentExpiredSeller&#x60;: A notification generated if an order payment has automatically expired. - &#x60;orderPendingAuthorizationBuyer&#x60;: A notification generated if an order accepted by buyer/seller but the payment is pending for authorization. - &#x60;orderPendingAuthorizationSeller&#x60;: A notification generated if an order accepted by buyer/seller but the payment is pending for authorization. - &#x60;orderPendingBuyer&#x60;: A notification generated if an order pending buyer approval. - &#x60;orderPendingDeliveryDataBuyer&#x60;: A notification generated if an order buyer needs to fill in the delivery data. - &#x60;orderPendingDeliveryDataSeller&#x60;: A notification generated if an order seller needs to fill in the delivery data. - &#x60;orderRealizedBuyer&#x60;: A notification generated if an order accepted by buyer (sent to seller). - &#x60;orderRealizedSeller&#x60;: A notification generated if an order accepted by seller (sent to buyer). - &#x60;orderRejectedByBuyer&#x60;: A notification generated if an order rejected by buyer. - &#x60;orderRejectedBySeller&#x60;: A notification generated if an order rejected by seller. - &#x60;passwordStatusChanged&#x60;: A notification generated if a password status has changed. - &#x60;paymentAwaitingAdminAuthorization&#x60;: An admin notification generated if a payment is awaiting for authorization. - &#x60;paymentAwaitingAuthorization&#x60;: A notification generated if a user must authorize a pending payment. - &#x60;paymentPerformed&#x60;: An admin notification generated if a payment is performed. - &#x60;paymentPerformedChargedBack&#x60;: A notification generated if a payment performed from a user is charged back. - &#x60;paymentReceived&#x60;: A notification generated if a user received a new payment. - &#x60;paymentReceivedChargedBack&#x60;: A notification generated if a payment received by a user is charged back. - &#x60;paymentRequestCanceled&#x60;: A notification generated if a payment request was canceled. - &#x60;paymentRequestDenied&#x60;: A notification generated if a payment request was denied. - &#x60;paymentRequestExpirationDateChanged&#x60;: A notification generated if the payment request&#39;s expiration date has changed. - &#x60;paymentRequestExpired&#x60;: A notification generated if a payment request has expired. - &#x60;paymentRequestProcessed&#x60;: A notification generated if a payment request was processed. - &#x60;paymentRequestReceived&#x60;: A notification generated if a payment request was received. - &#x60;recurringPaymentFailed&#x60;: A notification generated if a recurring payment from a user has failed (probably because of lack of funds). - &#x60;recurringPaymentOccurrenceProcessed&#x60;: A notification generated if an occurrence of an outgoing recurring payment was processed. - &#x60;referenceChanged&#x60;: A notification generated if a reference was modified. - &#x60;referenceCreated&#x60;: A notification generated if a reference has been set. - &#x60;salePendingBuyer&#x60;: A notification generated if a sale pending buyer approval. - &#x60;saleRealizedBuyer&#x60;: A notification generated if a sale accepted by buyer (sent to seller). - &#x60;saleRejectedSeller&#x60;: A notification generated if a sale rejected by seller. - &#x60;scheduledPaymentFailed&#x60;: A notification generated if a scheduled payment from a user has failed (probably because of lack of funds). - &#x60;scheduledPaymentInstallmentProcessed&#x60;: A notification generated if a scheduled payment to a user has been processed. - &#x60;scheduledPaymentRequestFailed&#x60;: A notification generated if a payment request which was scheduled has failed processing (probably because of lack of funds), and is being reopened. - &#x60;sentPaymentRequestExpirationDateChanged&#x60;: A notification generated if the payment request&#39;s expiration date has changed. This notification is to be sent to the sender. - &#x60;smsPerformedPayment&#x60;: A notification generated if a user performed a new payment through SMS. - &#x60;systemAlert&#x60;: An admin notification generated if a system alert as occurred. - &#x60;ticketWebhookFailed&#x60;: A notification generated if the invocation of a webhook after (a successful) ticket approval has failed. - &#x60;tokenStatusChanged&#x60;: A notification generated if a token / card status has changed. - &#x60;userAlert&#x60;: An admin notification generated if a member alert as occurred. - &#x60;userImport&#x60;: An admin notification generated if a user import has been done. - &#x60;userRegistration&#x60;: An admin notification generated if a new user has been registered. - &#x60;userStatusChanged&#x60;: A notification generated if a user status has changed. - &#x60;voucherAboutToExpire&#x60;: A notification generated if a one or more bought vouchers are about to expire. - &#x60;voucherAssigned&#x60;: A notification generated when a voucher was assigned to the user. - &#x60;voucherBuyingAboutToExpire&#x60;: An admin notification generated if a voucher type allowing buy is about to expire. - &#x60;voucherExpirationDateChanged&#x60;: A notification generated if a bought voucher has new expiration date. - &#x60;voucherExpired&#x60;: A notification generated if one or more bought vouchers have expired. - &#x60;voucherPinBlocked&#x60;: A voucher PIN was blocked by exceeding invalid attempts. - &#x60;voucherRedeem&#x60;: A voucher was redeemed - &#x60;voucherTopUp&#x60;: A voucher was topped-up
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class NotificationTypeEnum
{
    /**
     * Possible values of this enum
     */
    public const AD_AUTHORIZED = 'adAuthorized';

    public const AD_EXPIRED = 'adExpired';

    public const AD_INTEREST_NOTIFICATION = 'adInterestNotification';

    public const AD_PENDING_AUTHORIZATION = 'adPendingAuthorization';

    public const AD_PENDING_BY_ADMIN_AUTHORIZATION = 'adPendingByAdminAuthorization';

    public const AD_QUESTION_ANSWERED = 'adQuestionAnswered';

    public const AD_QUESTION_CREATED = 'adQuestionCreated';

    public const AD_REJECTED = 'adRejected';

    public const ALL_NON_SMS_PERFORMED_PAYMENTS = 'allNonSmsPerformedPayments';

    public const APPLICATION_ERROR = 'applicationError';

    public const ARTICLE_OUT_OF_STOCK = 'articleOutOfStock';

    public const AUTHORIZED_PAYMENT_CANCELED = 'authorizedPaymentCanceled';

    public const AUTHORIZED_PAYMENT_DENIED = 'authorizedPaymentDenied';

    public const AUTHORIZED_PAYMENT_EXPIRED = 'authorizedPaymentExpired';

    public const AUTHORIZED_PAYMENT_SUCCEEDED = 'authorizedPaymentSucceeded';

    public const BOUGHT_VOUCHERS_ABOUT_TO_EXPIRE = 'boughtVouchersAboutToExpire';

    public const BOUGHT_VOUCHERS_EXPIRATION_DATE_CHANGED = 'boughtVouchersExpirationDateChanged';

    public const BOUGHT_VOUCHERS_EXPIRED = 'boughtVouchersExpired';

    public const BROKER_ASSIGNED = 'brokerAssigned';

    public const BROKER_UNASSIGNED = 'brokerUnassigned';

    public const EXTERNAL_PAYMENT_EXPIRED = 'externalPaymentExpired';

    public const EXTERNAL_PAYMENT_PERFORMED_FAILED = 'externalPaymentPerformedFailed';

    public const EXTERNAL_PAYMENT_RECEIVED_FAILED = 'externalPaymentReceivedFailed';

    public const EXTERNAL_USER_PAYMENT_EXPIRED = 'externalUserPaymentExpired';

    public const EXTERNAL_USER_PAYMENT_PERFORMED_FAILED = 'externalUserPaymentPerformedFailed';

    public const FEEDBACK_CHANGED = 'feedbackChanged';

    public const FEEDBACK_CREATED = 'feedbackCreated';

    public const FEEDBACK_EXPIRATION_REMINDER = 'feedbackExpirationReminder';

    public const FEEDBACK_OPTIONAL = 'feedbackOptional';

    public const FEEDBACK_REPLY_CREATED = 'feedbackReplyCreated';

    public const FEEDBACK_REQUIRED = 'feedbackRequired';

    public const GENERATED_VOUCHERS_ABOUT_TO_EXPIRE = 'generatedVouchersAboutToExpire';

    public const GENERATED_VOUCHERS_EXPIRED = 'generatedVouchersExpired';

    public const INCOMING_RECURRING_PAYMENT_CANCELED = 'incomingRecurringPaymentCanceled';

    public const INCOMING_RECURRING_PAYMENT_FAILED = 'incomingRecurringPaymentFailed';

    public const INCOMING_RECURRING_PAYMENT_RECEIVED = 'incomingRecurringPaymentReceived';

    public const INCOMING_SCHEDULED_PAYMENT_CANCELED = 'incomingScheduledPaymentCanceled';

    public const INCOMING_SCHEDULED_PAYMENT_FAILED = 'incomingScheduledPaymentFailed';

    public const INCOMING_SCHEDULED_PAYMENT_RECEIVED = 'incomingScheduledPaymentReceived';

    public const LIMIT_CHANGE = 'limitChange';

    public const LOW_STOCK_QUANTITY = 'lowStockQuantity';

    public const MAX_SMS_PER_MONTH_REACHED = 'maxSmsPerMonthReached';

    public const MEMBER_ASSIGNED = 'memberAssigned';

    public const MEMBER_UNASSIGNED = 'memberUnassigned';

    public const NETWORK_CREATED = 'networkCreated';

    public const NEW_TOKEN = 'newToken';

    public const NEW_TOKEN_PENDING_ACTIVATION = 'newTokenPendingActivation';

    public const OPERATOR_AUTHORIZED_PAYMENT_APPROVED_STILL_PENDING = 'operatorAuthorizedPaymentApprovedStillPending';

    public const OPERATOR_AUTHORIZED_PAYMENT_CANCELED = 'operatorAuthorizedPaymentCanceled';

    public const OPERATOR_AUTHORIZED_PAYMENT_DENIED = 'operatorAuthorizedPaymentDenied';

    public const OPERATOR_AUTHORIZED_PAYMENT_EXPIRED = 'operatorAuthorizedPaymentExpired';

    public const OPERATOR_AUTHORIZED_PAYMENT_SUCCEEDED = 'operatorAuthorizedPaymentSucceeded';

    public const OPERATOR_PAYMENT_AWAITING_AUTHORIZATION = 'operatorPaymentAwaitingAuthorization';

    public const ORDER_CANCELED_BUYER = 'orderCanceledBuyer';

    public const ORDER_CANCELED_SELLER = 'orderCanceledSeller';

    public const ORDER_CREATED = 'orderCreated';

    public const ORDER_PAYMENT_CANCELED_BUYER = 'orderPaymentCanceledBuyer';

    public const ORDER_PAYMENT_CANCELED_SELLER = 'orderPaymentCanceledSeller';

    public const ORDER_PAYMENT_DENIED_BUYER = 'orderPaymentDeniedBuyer';

    public const ORDER_PAYMENT_DENIED_SELLER = 'orderPaymentDeniedSeller';

    public const ORDER_PAYMENT_EXPIRED_BUYER = 'orderPaymentExpiredBuyer';

    public const ORDER_PAYMENT_EXPIRED_SELLER = 'orderPaymentExpiredSeller';

    public const ORDER_PENDING_AUTHORIZATION_BUYER = 'orderPendingAuthorizationBuyer';

    public const ORDER_PENDING_AUTHORIZATION_SELLER = 'orderPendingAuthorizationSeller';

    public const ORDER_PENDING_BUYER = 'orderPendingBuyer';

    public const ORDER_PENDING_DELIVERY_DATA_BUYER = 'orderPendingDeliveryDataBuyer';

    public const ORDER_PENDING_DELIVERY_DATA_SELLER = 'orderPendingDeliveryDataSeller';

    public const ORDER_REALIZED_BUYER = 'orderRealizedBuyer';

    public const ORDER_REALIZED_SELLER = 'orderRealizedSeller';

    public const ORDER_REJECTED_BY_BUYER = 'orderRejectedByBuyer';

    public const ORDER_REJECTED_BY_SELLER = 'orderRejectedBySeller';

    public const PASSWORD_STATUS_CHANGED = 'passwordStatusChanged';

    public const PAYMENT_AWAITING_ADMIN_AUTHORIZATION = 'paymentAwaitingAdminAuthorization';

    public const PAYMENT_AWAITING_AUTHORIZATION = 'paymentAwaitingAuthorization';

    public const PAYMENT_PERFORMED = 'paymentPerformed';

    public const PAYMENT_PERFORMED_CHARGED_BACK = 'paymentPerformedChargedBack';

    public const PAYMENT_RECEIVED = 'paymentReceived';

    public const PAYMENT_RECEIVED_CHARGED_BACK = 'paymentReceivedChargedBack';

    public const PAYMENT_REQUEST_CANCELED = 'paymentRequestCanceled';

    public const PAYMENT_REQUEST_DENIED = 'paymentRequestDenied';

    public const PAYMENT_REQUEST_EXPIRATION_DATE_CHANGED = 'paymentRequestExpirationDateChanged';

    public const PAYMENT_REQUEST_EXPIRED = 'paymentRequestExpired';

    public const PAYMENT_REQUEST_PROCESSED = 'paymentRequestProcessed';

    public const PAYMENT_REQUEST_RECEIVED = 'paymentRequestReceived';

    public const RECURRING_PAYMENT_FAILED = 'recurringPaymentFailed';

    public const RECURRING_PAYMENT_OCCURRENCE_PROCESSED = 'recurringPaymentOccurrenceProcessed';

    public const REFERENCE_CHANGED = 'referenceChanged';

    public const REFERENCE_CREATED = 'referenceCreated';

    public const SALE_PENDING_BUYER = 'salePendingBuyer';

    public const SALE_REALIZED_BUYER = 'saleRealizedBuyer';

    public const SALE_REJECTED_SELLER = 'saleRejectedSeller';

    public const SCHEDULED_PAYMENT_FAILED = 'scheduledPaymentFailed';

    public const SCHEDULED_PAYMENT_INSTALLMENT_PROCESSED = 'scheduledPaymentInstallmentProcessed';

    public const SCHEDULED_PAYMENT_REQUEST_FAILED = 'scheduledPaymentRequestFailed';

    public const SENT_PAYMENT_REQUEST_EXPIRATION_DATE_CHANGED = 'sentPaymentRequestExpirationDateChanged';

    public const SMS_PERFORMED_PAYMENT = 'smsPerformedPayment';

    public const SYSTEM_ALERT = 'systemAlert';

    public const TICKET_WEBHOOK_FAILED = 'ticketWebhookFailed';

    public const TOKEN_STATUS_CHANGED = 'tokenStatusChanged';

    public const USER_ALERT = 'userAlert';

    public const USER_IMPORT = 'userImport';

    public const USER_REGISTRATION = 'userRegistration';

    public const USER_STATUS_CHANGED = 'userStatusChanged';

    public const VOUCHER_ABOUT_TO_EXPIRE = 'voucherAboutToExpire';

    public const VOUCHER_ASSIGNED = 'voucherAssigned';

    public const VOUCHER_BUYING_ABOUT_TO_EXPIRE = 'voucherBuyingAboutToExpire';

    public const VOUCHER_EXPIRATION_DATE_CHANGED = 'voucherExpirationDateChanged';

    public const VOUCHER_EXPIRED = 'voucherExpired';

    public const VOUCHER_PIN_BLOCKED = 'voucherPinBlocked';

    public const VOUCHER_REDEEM = 'voucherRedeem';

    public const VOUCHER_TOP_UP = 'voucherTopUp';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::AD_AUTHORIZED,
            self::AD_EXPIRED,
            self::AD_INTEREST_NOTIFICATION,
            self::AD_PENDING_AUTHORIZATION,
            self::AD_PENDING_BY_ADMIN_AUTHORIZATION,
            self::AD_QUESTION_ANSWERED,
            self::AD_QUESTION_CREATED,
            self::AD_REJECTED,
            self::ALL_NON_SMS_PERFORMED_PAYMENTS,
            self::APPLICATION_ERROR,
            self::ARTICLE_OUT_OF_STOCK,
            self::AUTHORIZED_PAYMENT_CANCELED,
            self::AUTHORIZED_PAYMENT_DENIED,
            self::AUTHORIZED_PAYMENT_EXPIRED,
            self::AUTHORIZED_PAYMENT_SUCCEEDED,
            self::BOUGHT_VOUCHERS_ABOUT_TO_EXPIRE,
            self::BOUGHT_VOUCHERS_EXPIRATION_DATE_CHANGED,
            self::BOUGHT_VOUCHERS_EXPIRED,
            self::BROKER_ASSIGNED,
            self::BROKER_UNASSIGNED,
            self::EXTERNAL_PAYMENT_EXPIRED,
            self::EXTERNAL_PAYMENT_PERFORMED_FAILED,
            self::EXTERNAL_PAYMENT_RECEIVED_FAILED,
            self::EXTERNAL_USER_PAYMENT_EXPIRED,
            self::EXTERNAL_USER_PAYMENT_PERFORMED_FAILED,
            self::FEEDBACK_CHANGED,
            self::FEEDBACK_CREATED,
            self::FEEDBACK_EXPIRATION_REMINDER,
            self::FEEDBACK_OPTIONAL,
            self::FEEDBACK_REPLY_CREATED,
            self::FEEDBACK_REQUIRED,
            self::GENERATED_VOUCHERS_ABOUT_TO_EXPIRE,
            self::GENERATED_VOUCHERS_EXPIRED,
            self::INCOMING_RECURRING_PAYMENT_CANCELED,
            self::INCOMING_RECURRING_PAYMENT_FAILED,
            self::INCOMING_RECURRING_PAYMENT_RECEIVED,
            self::INCOMING_SCHEDULED_PAYMENT_CANCELED,
            self::INCOMING_SCHEDULED_PAYMENT_FAILED,
            self::INCOMING_SCHEDULED_PAYMENT_RECEIVED,
            self::LIMIT_CHANGE,
            self::LOW_STOCK_QUANTITY,
            self::MAX_SMS_PER_MONTH_REACHED,
            self::MEMBER_ASSIGNED,
            self::MEMBER_UNASSIGNED,
            self::NETWORK_CREATED,
            self::NEW_TOKEN,
            self::NEW_TOKEN_PENDING_ACTIVATION,
            self::OPERATOR_AUTHORIZED_PAYMENT_APPROVED_STILL_PENDING,
            self::OPERATOR_AUTHORIZED_PAYMENT_CANCELED,
            self::OPERATOR_AUTHORIZED_PAYMENT_DENIED,
            self::OPERATOR_AUTHORIZED_PAYMENT_EXPIRED,
            self::OPERATOR_AUTHORIZED_PAYMENT_SUCCEEDED,
            self::OPERATOR_PAYMENT_AWAITING_AUTHORIZATION,
            self::ORDER_CANCELED_BUYER,
            self::ORDER_CANCELED_SELLER,
            self::ORDER_CREATED,
            self::ORDER_PAYMENT_CANCELED_BUYER,
            self::ORDER_PAYMENT_CANCELED_SELLER,
            self::ORDER_PAYMENT_DENIED_BUYER,
            self::ORDER_PAYMENT_DENIED_SELLER,
            self::ORDER_PAYMENT_EXPIRED_BUYER,
            self::ORDER_PAYMENT_EXPIRED_SELLER,
            self::ORDER_PENDING_AUTHORIZATION_BUYER,
            self::ORDER_PENDING_AUTHORIZATION_SELLER,
            self::ORDER_PENDING_BUYER,
            self::ORDER_PENDING_DELIVERY_DATA_BUYER,
            self::ORDER_PENDING_DELIVERY_DATA_SELLER,
            self::ORDER_REALIZED_BUYER,
            self::ORDER_REALIZED_SELLER,
            self::ORDER_REJECTED_BY_BUYER,
            self::ORDER_REJECTED_BY_SELLER,
            self::PASSWORD_STATUS_CHANGED,
            self::PAYMENT_AWAITING_ADMIN_AUTHORIZATION,
            self::PAYMENT_AWAITING_AUTHORIZATION,
            self::PAYMENT_PERFORMED,
            self::PAYMENT_PERFORMED_CHARGED_BACK,
            self::PAYMENT_RECEIVED,
            self::PAYMENT_RECEIVED_CHARGED_BACK,
            self::PAYMENT_REQUEST_CANCELED,
            self::PAYMENT_REQUEST_DENIED,
            self::PAYMENT_REQUEST_EXPIRATION_DATE_CHANGED,
            self::PAYMENT_REQUEST_EXPIRED,
            self::PAYMENT_REQUEST_PROCESSED,
            self::PAYMENT_REQUEST_RECEIVED,
            self::RECURRING_PAYMENT_FAILED,
            self::RECURRING_PAYMENT_OCCURRENCE_PROCESSED,
            self::REFERENCE_CHANGED,
            self::REFERENCE_CREATED,
            self::SALE_PENDING_BUYER,
            self::SALE_REALIZED_BUYER,
            self::SALE_REJECTED_SELLER,
            self::SCHEDULED_PAYMENT_FAILED,
            self::SCHEDULED_PAYMENT_INSTALLMENT_PROCESSED,
            self::SCHEDULED_PAYMENT_REQUEST_FAILED,
            self::SENT_PAYMENT_REQUEST_EXPIRATION_DATE_CHANGED,
            self::SMS_PERFORMED_PAYMENT,
            self::SYSTEM_ALERT,
            self::TICKET_WEBHOOK_FAILED,
            self::TOKEN_STATUS_CHANGED,
            self::USER_ALERT,
            self::USER_IMPORT,
            self::USER_REGISTRATION,
            self::USER_STATUS_CHANGED,
            self::VOUCHER_ABOUT_TO_EXPIRE,
            self::VOUCHER_ASSIGNED,
            self::VOUCHER_BUYING_ABOUT_TO_EXPIRE,
            self::VOUCHER_EXPIRATION_DATE_CHANGED,
            self::VOUCHER_EXPIRED,
            self::VOUCHER_PIN_BLOCKED,
            self::VOUCHER_REDEEM,
            self::VOUCHER_TOP_UP
        ];
    }
}


