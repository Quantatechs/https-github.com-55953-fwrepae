<?php
/**
 * QuickAccessTypeEnum
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Inter TT API
 *
 * The Inter TT REST API is described using OpenAPI 3.0. The descriptor for the api can be downloaded in both [YAML](http://localhost:8080/cyclos/api/openapi.yaml) or [JSON](http://localhost:8080/cyclos/api/openapi.json) formats. These files can be used in tools that support the OpenAPI specification, such as the [OpenAPI Generator](https://openapi-generator.tech).  In the API, whenever some data is referenced, for example, a group, or payment type, either id or internal name can be used. When an user is to be referenced, the special word 'self' (sans quotes) always refers to the currently authenticated user, and any identification method (login name, e-mail, mobile phone, account number or custom field) that can be used on keywords search (as configured in the products) can also be used to identify users. Some specific data types have other identification fields, like accounts can have a number and payments can have a transaction number. This all depends on the current configuration.  -----------  Most of the operations that return data allow selecting which fields to include in the response. This is useful to avoid calculating data that finally won't be needed and also for reducing the transfer over the network. If nothing is set, all object fields are returned. Fields are handled in 3 modes. Given an example object `{\"a\": {\"x\": 1, \"y\": 2, \"z\": 3}, \"b\": 0}`, the modes are: - **Include**: the field is unprefixed or prefixed with `+`. All fields which   are not explicitly included are excluded from the result. Examples:   - `[\"a\"]` results in `{\"a\": {\"x\": 1, \"y\": 2, \"z\": 3}}`   - `[\"+b\"]` results in `{\"b\": 0}`   - `[\"a.x\"]` results in `{\"a\": {\"x\": 1}}`. This is a nested include. At root     level, includes only `a` then, on `a`'s level, includes only `x`.  - **Exclude**: the field is prefixed by `-` (or, for compatibility purposes,   `!`). Only explicitly excluded fields   are excluded from the result. Examples:   - `[\"-a\"]` results in `{\"b\": 0}`   - `[\"-b\"]` results in `{\"a\": {\"x\": 1, \"y\": 2, \"z\": 3}}`   - `[\"a.-x\"]` results in `{\"a\": {\"y\": 2, \"z\": 3}}`. In this example, `a` is     actually an include at the root level, hence, excludes `b`.  - **Nested only**: when a field is prefixed by `*` and has a nested path,   it only affects includes / excludes for the nested fields, without affecting   the current level. Only nested fields are configured.   Examples:   - `[\"*a.x\"]` results in `{\"a\": {\"x\": 1}, \"b\": 0}`. In this example, `a` is     configured to include only `x`. `b` is also included because, there is no     explicit includes at root level.   - `[\"*a.-x\"]` results in `{\"a\": {\"y\": 2, \"z\": 3}, \"b\": 0}`. In this example,     `a` is configured to exclude only `x`. `b` is also included because there     is no explicit includes at the root level.     For backwards compatibility, this can also be expressed in a special     syntax `-a.x`. Also, keep in mind that `-x.y.z` is equivalent to `*x.*y.-z`.  You cannot have the same field included and excluded at the same time - a HTTP `422` status will be returned. Also, when mixing nested excludes with explicit includes or excludes, the nested exclude will be ignored. For example, using `[\"*a.x\", \"a.y\"]` will ignore the `*a.x` definition, resulting in `{\"a\": {\"y\": 2}}`.  -----------  For details of the deprecated elements (operations and model) please visit the [deprecation notes page](https://documentation.cyclos.org/4.16.3/api-deprecation.html) for this version.
 *
 * The version of the OpenAPI document: 4.16.3
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * QuickAccessTypeEnum Class Doc Comment
 *
 * @category Class
 * @description An element shown in the quick access on the new frontend dashboard. Possible values are: - &#x60;account&#x60;: Account history - &#x60;adInterests&#x60;: Advertisement interests - &#x60;balancesOverview&#x60;: User balances overview - &#x60;brokeredUsers&#x60;: Registered users - &#x60;buyVoucher&#x60;: Buy voucher - &#x60;contacts&#x60;: View contacts - &#x60;createAd&#x60;: Create ad - &#x60;createWebshopAd&#x60;: Create webshop ad - &#x60;documents&#x60;: Documents - &#x60;editProfile&#x60;: Edit own profile - &#x60;externalPayments&#x60;: External payments - &#x60;help&#x60;: Show help - &#x60;inviteUser&#x60;: Invite user - &#x60;messages&#x60;: Messages - &#x60;myAds&#x60;: My ads - &#x60;myWebshop&#x60;: My webshop - &#x60;notifications&#x60;: Notifications - &#x60;operation&#x60;: Run custom operation - &#x60;passwords&#x60;: Manage own passwords - &#x60;payExternalUser&#x60;: Pay external user - &#x60;paySelf&#x60;: Transfer between own accounts - &#x60;paySystem&#x60;: Pay to a system account - &#x60;payUser&#x60;: Pay to a user - &#x60;paymentRequests&#x60;: Payment requests - &#x60;pendingUsers&#x60;: Pending users - &#x60;pos&#x60;: Receive payment (POS) - &#x60;purchases&#x60;: My purchases - &#x60;receiveQrPayment&#x60;: Receive QR-code payment - &#x60;record&#x60;: View records - &#x60;redeemVoucher&#x60;: Redeem voucher - &#x60;references&#x60;: View references - &#x60;registerUser&#x60;: Register user - &#x60;requestPaymentFromSystem&#x60;: Request payment from system - &#x60;requestPaymentFromUser&#x60;: Request payment from user - &#x60;sales&#x60;: My sales - &#x60;scheduledPayments&#x60;: Scheduled payments - &#x60;searchAds&#x60;: Search advertisements (marketplace) - &#x60;searchUsers&#x60;: Search users (user directory) - &#x60;sendMessage&#x60;: Send message - &#x60;sendVoucher&#x60;: Send voucher - &#x60;settings&#x60;: Settings - &#x60;switchFrontend&#x60;: Switch between frontends - &#x60;switchTheme&#x60;: Switch between light and dark themes - &#x60;token&#x60;: Token - &#x60;topUpVoucher&#x60;: Top-up voucher - &#x60;transactionFeedbacks&#x60;: Transaction feedbacks - &#x60;transfersOverview&#x60;: Transfers overview - &#x60;voucherTransactions&#x60;: Search voucher transactions - &#x60;vouchers&#x60;: Search vouchers - &#x60;wizard&#x60;: Run wizard
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class QuickAccessTypeEnum
{
    /**
     * Possible values of this enum
     */
    public const ACCOUNT = 'account';

    public const AD_INTERESTS = 'adInterests';

    public const BALANCES_OVERVIEW = 'balancesOverview';

    public const BROKERED_USERS = 'brokeredUsers';

    public const BUY_VOUCHER = 'buyVoucher';

    public const CONTACTS = 'contacts';

    public const CREATE_AD = 'createAd';

    public const CREATE_WEBSHOP_AD = 'createWebshopAd';

    public const DOCUMENTS = 'documents';

    public const EDIT_PROFILE = 'editProfile';

    public const EXTERNAL_PAYMENTS = 'externalPayments';

    public const HELP = 'help';

    public const INVITE_USER = 'inviteUser';

    public const MESSAGES = 'messages';

    public const MY_ADS = 'myAds';

    public const MY_WEBSHOP = 'myWebshop';

    public const NOTIFICATIONS = 'notifications';

    public const OPERATION = 'operation';

    public const PASSWORDS = 'passwords';

    public const PAY_EXTERNAL_USER = 'payExternalUser';

    public const PAY_SELF = 'paySelf';

    public const PAY_SYSTEM = 'paySystem';

    public const PAY_USER = 'payUser';

    public const PAYMENT_REQUESTS = 'paymentRequests';

    public const PENDING_USERS = 'pendingUsers';

    public const POS = 'pos';

    public const PURCHASES = 'purchases';

    public const RECEIVE_QR_PAYMENT = 'receiveQrPayment';

    public const RECORD = 'record';

    public const REDEEM_VOUCHER = 'redeemVoucher';

    public const REFERENCES = 'references';

    public const REGISTER_USER = 'registerUser';

    public const REQUEST_PAYMENT_FROM_SYSTEM = 'requestPaymentFromSystem';

    public const REQUEST_PAYMENT_FROM_USER = 'requestPaymentFromUser';

    public const SALES = 'sales';

    public const SCHEDULED_PAYMENTS = 'scheduledPayments';

    public const SEARCH_ADS = 'searchAds';

    public const SEARCH_USERS = 'searchUsers';

    public const SEND_MESSAGE = 'sendMessage';

    public const SEND_VOUCHER = 'sendVoucher';

    public const SETTINGS = 'settings';

    public const SWITCH_FRONTEND = 'switchFrontend';

    public const SWITCH_THEME = 'switchTheme';

    public const TOKEN = 'token';

    public const TOP_UP_VOUCHER = 'topUpVoucher';

    public const TRANSACTION_FEEDBACKS = 'transactionFeedbacks';

    public const TRANSFERS_OVERVIEW = 'transfersOverview';

    public const VOUCHER_TRANSACTIONS = 'voucherTransactions';

    public const VOUCHERS = 'vouchers';

    public const WIZARD = 'wizard';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::ACCOUNT,
            self::AD_INTERESTS,
            self::BALANCES_OVERVIEW,
            self::BROKERED_USERS,
            self::BUY_VOUCHER,
            self::CONTACTS,
            self::CREATE_AD,
            self::CREATE_WEBSHOP_AD,
            self::DOCUMENTS,
            self::EDIT_PROFILE,
            self::EXTERNAL_PAYMENTS,
            self::HELP,
            self::INVITE_USER,
            self::MESSAGES,
            self::MY_ADS,
            self::MY_WEBSHOP,
            self::NOTIFICATIONS,
            self::OPERATION,
            self::PASSWORDS,
            self::PAY_EXTERNAL_USER,
            self::PAY_SELF,
            self::PAY_SYSTEM,
            self::PAY_USER,
            self::PAYMENT_REQUESTS,
            self::PENDING_USERS,
            self::POS,
            self::PURCHASES,
            self::RECEIVE_QR_PAYMENT,
            self::RECORD,
            self::REDEEM_VOUCHER,
            self::REFERENCES,
            self::REGISTER_USER,
            self::REQUEST_PAYMENT_FROM_SYSTEM,
            self::REQUEST_PAYMENT_FROM_USER,
            self::SALES,
            self::SCHEDULED_PAYMENTS,
            self::SEARCH_ADS,
            self::SEARCH_USERS,
            self::SEND_MESSAGE,
            self::SEND_VOUCHER,
            self::SETTINGS,
            self::SWITCH_FRONTEND,
            self::SWITCH_THEME,
            self::TOKEN,
            self::TOP_UP_VOUCHER,
            self::TRANSACTION_FEEDBACKS,
            self::TRANSFERS_OVERVIEW,
            self::VOUCHER_TRANSACTIONS,
            self::VOUCHERS,
            self::WIZARD
        ];
    }
}


